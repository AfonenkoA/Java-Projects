# Сервис продажи железно-дорожных билетов

## Overall Description

Данный документ описывает спецификацию требований к веб-сервису для покупки железнодорожных билетов. Сервис предоставляет пользователям возможность поиска рейсов, бронирования и покупки билетов, а администраторам — управления расписанием, поездами и тарифами.

## Product Functions

-   Регистрация, аутентификация и авторизация пользователей.
-   Управление профилем пользователя.
-   Поиск и просмотр доступных железнодорожных рейсов.
-   Бронирование и покупка билетов.
-   Управление бронированиями (просмотр, отмена).
-   Администрирование системы (управление поездами, маршрутами, станциями, рейсами).
-   Формирование и просмотр электронных билетов.

## System Features

### Поиск и просмотр рейсов

#### Description and Priority

Функция позволяет пользователям искать доступные рейсы между станциями на выбранную дату. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1: Поиск рейса**
    *   *Стимул:* Пользователь на главной странице выбирает станцию отправления, станцию назначения, дату поездки и нажимает "Найти".
    *   *Ответ:* Система выполняет запрос к БД, находит все подходящие рейсы (включая транзитные), рассчитывает стоимость и отображает список рейсов пользователю.
-   **Сценарий 2: Рейсы не найдены**
    *   *Стимул:* Пользователь ищет рейс по несуществующему или некорректному маршруту.
    *   *Ответ:* Система отображает сообщение: "По вашему запросу рейсов не найдено".

#### Functional Requirements

*   **SEARCH-1**: Система должна предоставлять интерфейс для поиска рейсов по станции отправления, станции назначения и дате.
*   **SEARCH-2**: Система должна отображать список найденных рейсов, включая номер поезда, время отправления/прибытия, время в пути и стоимость.
*   **SEARCH-3**: Система должна рассчитывать стоимость проезда на основе предустановленных тарифов и класса обслуживания.
*   **SEARCH-4**: Система должна поддерживать поиск только по активным (не отмененным) рейсам.

### Бронирование и покупка билета

#### Description and Priority

Функция позволяет аутентифицированному пользователю забронировать билет на выбранный рейс, выбрать места и оплатить заказ. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1: Успешное бронирование и оплата**
    *   *Стимул:* Пользователь выбирает рейс, нажимает "Купить", выбирает вагон и место, подтверждает выбор и переходит к оплате.
    *   *Ответ:* Система создает запись о бронировании со статусом "Забронировано", резервирует место на рейсе. После успешной оплаты (интеграция с платежным шлюзом) система меняет статус бронирования на "Оплачено", генерирует электронный билет.
-   **Сценарий 2: Отмена бронирования**
    *   *Стимул:* Пользователь в разделе "Мои заказы" нажимает "Отменить" для неоплаченного бронирования.
    *   *Ответ:* Система меняет статус бронирования на "Отменено", снимает резерв с места, делая его снова доступным для покупки.

#### Functional Requirements

*   **BOOK-1**: Система должна позволять аутентифицированному пользователю выбрать конкретное место в вагоне.
*   **BOOK-2**: Система должна предотвращать выбор уже занятого места.
*   **BOOK-3**: Система должна резервировать место на определенное время до момента оплаты.
*   **BOOK-4**: Система должна предоставлять функционал для имитации успешной оплаты.
*   **BOOK-5**: При смене статуса на "Оплачено" система должна генерировать электронный билет в формате TXT или Markdown.

### Управление заказами пользователя

#### Description and Priority

Функция позволяет пользователю просматривать историю своих заказов, текущие бронирования и отменять их. Приоритет: Средний.

#### **Stimulus/Response Sequences**

**Сценарий: Просмотр истории заказов**
-   *Стимул:* Пользователь переходит в раздел "Мои заказы".
-   *Ответ:* Система отображает список всех бронирований пользователя, отсортированных по дате создания, с указанием статуса, деталей рейса и информации о билете.

#### Functional Requirements

-   **ORDER-1**: Система должна предоставлять пользователю список всех его бронирований.
-   **ORDER-2**: Пользователь должен иметь возможность фильтровать заказы по статусу (например, "Активные", "Завершенные", "Отмененные").
-   **ORDER-3**: Пользователь должен иметь возможность отменить неоплаченное бронирование.
-   **ORDER-4**: Для оплаченных билетов система должна предоставлять ссылку для скачивания электронного билета.

### Администрирование системы

#### Description and Priority

Функция позволяет администраторам управлять справочной информацией (поезда, вагоны, станции) и расписанием рейсов. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий: Добавление нового рейса**
-   *Стимул:* Администратор в панели управления переходит в раздел "Расписание", нажимает "Добавить рейс", заполняет форму (поезд, маршрут, время отправления, время прибытия) и сохраняет.
-   *Ответ:* Система валидирует данные, создает новый рейс в базе данных и отображает его в общем списке расписания.

#### Functional Requirements

*   **ADMIN-1**: Система должна предоставлять интерфейс администратора для управления сущностями: `Поезд`, `Вагон`, `Станция`, `Маршрут`, `Рейс`.
*   **ADMIN-2**: Система должна позволять создавать, просматривать, редактировать и деактивировать каждую из сущностей.
*   **ADMIN-3**: При создании рейса система должна автоматически создавать доступные для бронирования места на основе состава поезда.
*   **ADMIN-4**: Система должна разграничивать права доступа: доступ к панели администратора должен быть только у соответствующих пользователей.

### Управление поездами и составами

#### Description and Priority

Функция позволяет администраторам конфигурировать поезда, состоящие из вагонов разных классов. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий: Создание конфигурации поезда**
-   *Стимул:* Администратор создает новый поезд, затем добавляет в его состав несколько вагонов, указывая для каждого тип (e.g., "Плацкарт", "Купе", "СВ"), номер и количество мест.
-   *Ответ:* Система сохраняет конфигурацию поезда. Теперь этот поезд можно использовать при создании рейсов.

#### Functional Requirements

-   **TRAIN-1**: Система должна позволять администратору создавать и редактировать поезда.
-   **TRAIN-2**: Система должна позволять прикреплять к поезду вагоны разных типов.
-   **TRAIN-3**: Для каждого типа вагона система должна иметь предустановленную стоимость билета.
-   **TRAIN-4**: Система должна автоматически генерировать нумерованные места для каждого вагона при его добавлении в состав.
