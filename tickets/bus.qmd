# Сервис продажи автобусных билетов

## Overall Description


## Product Functions

-   Управление учетными записями пользователей (регистрация, аутентификация, восстановление пароля).
-   Поиск рейсов по пункту отправления, назначения и дате.
-   Просмотр деталей рейса (время в пути, свободные места, стоимость).
-   Бронирование билетов с выбором мест.
-   Оплата забронированных билетов (симуляция платежного шлюза).
-   Управление бронированиями (просмотр, отмена, печать билета).
-   Административное управление маршрутами, рейсами и ценами.
-   Административное управление пользователями и бронированиями.

## System Features

### Поиск и просмотр рейсов

#### Description and Priority

Функция позволяет пользователям искать доступные рейсы по критериям и просматривать детальную информацию о них. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1: Успешный поиск рейса**
    *   *Стимул:* Пользователь на главной странице выбирает пункт отправления, назначения, дату поездки и нажимает "Найти".
    *   *Ответ:* Система отображает список рейсов, удовлетворяющих критериям, с информацией о времени отправления/прибытия, стоимости и количестве свободных мест.
-   **Сценарий 2: Просмотр деталей рейса**
    *   *Стимул:* Пользователь нажимает на рейс из списка результатов.
    *   *Ответ:* Система отображает детальную страницу рейса: схему автобуса с занятыми/свободными местами, точное время, список остановок.

#### Functional Requirements

-   **SRCH-1**: Система должна предоставлять интерфейс для поиска рейсов по пункту отправления, назначения и дате.
-   **SRCH-2**: Система должна отображать список найденных рейсов, отсортированный по времени отправления.
-   **SRCH-3**: Для каждого рейса в списке система должна отображать время отправления/прибытия, стоимость и количество свободных мест.
-   **SRCH-4**: Система должна предоставлять страницу с детальной информацией о рейсе, включая схему расположения мест в автобусе.

### Бронирование и покупка билета

#### Description and Priority

Функция позволяет аутентифицированному пользователю выбрать места, забронировать и оплатить билет. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1: Бронирование билета**
    *   *Стимул:* На странице рейса пользователь выбирает одно или несколько свободных мест и нажимает "Забронировать".
    *   *Ответ:* Система резервирует выбранные места на ограниченное время, создает запись о бронировании и перенаправляет в корзину.
-   **Сценарий 2: Успешная оплата**
    *   *Стимул:* В корзине пользователь нажимает "Оплатить", вводит данные тестовой карты.
    *   *Ответ:* Система проверяет данные, помечает бронирование как "Оплаченное", генерирует электронный билет. Места помечаются как занятые.
-   **Сценарий 3: Отмена бронирования**
    *   *Стимул:* Пользователь в разделе "Мои бронирования" нажимает "Отменить" у неоплаченного заказа.
    *   *Ответ:* Система освобождает забронированные места и удаляет запись о бронировании.

#### Functional Requirements

-   **BOOK-1**: Система должна позволять аутентифицированному пользователю выбирать свободные места на схеме автобуса.
-   **BOOK-2**: Система должна резервировать выбранные места на определенный таймаут.
-   **BOOK-3**: Система должна предоставлять интерфейс (корзину) для завершения оплаты забронированных билетов.
-   **BOOK-4**: Система должна интегрироваться с симулятором платежного шлюза для обработки транзакций.
-   **BOOK-5**: После успешной оплаты система должна генерировать уникальный номер билета.
-   **BOOK-6**: Система должна автоматически освобождать места, бронирование которых не было оплачено в течение таймаута.

### Управление личным кабинетом и бронированиями

#### Description and Priority

Функция позволяет пользователю просматривать историю заказов, активные бронирования и скачивать электронные билеты. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий: Просмотр истории заказов**
-   *Стимул:* Пользователь переходит в раздел "Мои поездки".
-   *Ответ:* Система отображает список всех бронирований (как активных, так и завершенных) с детальной информацией по каждому.

#### Functional Requirements

-   **CAB-1**: Система должна предоставлять пользователю страницу с списком всех его бронирований и покупок.
-   **CAB-2**: Для каждого билета система должна отображать статус ("Забронирован", "Оплачен", "Истек"), номер, данные о рейсе и выбранные места.
-   **CAB-3**: Пользователь должен иметь возможность отменить неоплаченное бронирование.
-   **CAB-4**: Система должна предоставлять возможность скачать/просмотреть электронный билет в формате PDF для оплаченных заказов.

### Административное управление системой

#### Description and Priority

Функция позволяет администраторам управлять маршрутами, рейсами, ценами и просматривать все бронирования. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий: Добавление нового рейса**
-   *Стимул:* Администратор в панели управления нажимает "Добавить рейс", выбирает маршрут, автобус, дату и время отправления, базовую цену.
-   *Ответ:* Система создает новый рейс в расписании, делая его доступным для поиска и бронирования.

#### Functional Requirements

-   **ADM-1**: Система должна позволять администратору создавать, редактировать и деактивировать маршруты и остановки.
-   **ADM-2**: Система должна позволять администратору создавать, редактировать и удалять рейсы в расписании.
-   **ADM-3**: Система должна позволять администратору управлять парком автобусов (добавлять, редактировать, указывать схему мест).
-   **ADM-4**: Система должна позволять администратору просматривать все бронирования и фильтровать их по статусу, дате, рейсу.
-   **ADM-5**: Система должна позволять администратору принудительно отменять бронирования пользователей.
