# Баг-трекер система

## Overall Description

Реализовать систему отслеживания ошибок (баг-трекер) аналогичную GitHub Issues или Bugzilla для управления программными ошибками и задачами в проектах.

## Product Functions

- Регистрация и аутентификация пользователей
- Управление проектами и их участниками
- Создание и редактирование задач (issues)
- Система статусов и workflow задач
- Поиск и фильтрация задач
- Комментирование задач
- Система тегов и меток для задач

## System Features

### Управление аккаунтом

#### Description and Priority

Функция позволяет пользователям регистрировать новую учетную запись и аутентифицироваться в системе. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Успешная регистрация
  * *Стимул:* Гость нажимает "Зарегистрироваться", вводит email, имя пользователя, пароль и подтверждает пароль.
  * *Ответ:* Система проверяет уникальность имени пользователя/email, сохраняет данные пользователя в БД и перенаправляет на страницу входа с сообщением об успехе.
- **Сценарий 2:** Успешный вход
  * *Стимул:* Пользователь вводит имя пользователя и пароль на форме входа.
  * *Ответ:* Система проверяет учетные данные, создает сессию и перенаправляет пользователя на дашборд проектов.
- **Сценарий 3:** Неуспешный вход
  * *Стимул:* Пользователь вводит неверные учетные данные.
  * *Ответ:* Система отображает сообщение об ошибке, не создавая сессию.

#### Functional Requirements

- **AUTH-1**: Система должна предоставлять форму для регистрации нового пользователя.
- **AUTH-2**: Система должна проверять, что имя пользователя и email не заняты другими пользователями.
- **AUTH-3**: Система должна хэшировать пароли перед сохранением в базу данных.
- **AUTH-4**: Система должна предоставлять форму для аутентификации существующего пользователя.
- **AUTH-5**: Система должна создавать и поддерживать пользовательскую сессию после успешной аутентификации.
- **AUTH-6**: Доступ к защищенным страницам должен быть запрещен для неаутентифицированных пользователей.

### Управление проектами

#### Description and Priority

Позволяет пользователям создавать проекты, управлять участниками и настройками проектов. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Создание нового проекта
  * *Стимул:* Аутентифицированный пользователь нажимает "Создать проект", вводит название, описание и настраивает видимость проекта.
  * *Ответ:* Система создает проект, назначает пользователя владельцем и перенаправляет на страницу проекта.
- **Сценарий 2:** Добавление участника в проект
  * *Стимул:* Владелец проекта вводит имя пользователя и выбирает роль для нового участника.
  * *Ответ:* Система проверяет существование пользователя, добавляет его в проект с указанной ролью и отправляет уведомление новому участнику.

#### Functional Requirements

- **PROJ-1**: Аутентифицированный пользователь должен иметь возможность создавать новые проекты.
- **PROJ-2**: Владелец проекта должен иметь возможность редактировать настройки проекта.
- **PROJ-3**: Владелец проекта должен иметь возможность добавлять и удалять участников проекта.
- **PROJ-4**: Система должна поддерживать различные роли участников (владелец, разработчик, тестировщик, наблюдатель).

### Управление задачами (Issues)

#### Description and Priority

Позволяет пользователям создавать, редактировать и управлять задачами в проектах. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Создание новой задачи
  * *Стимул:* Участник проекта нажимает "Новая задача", заполняет заголовок, описание, выбирает тип (баг/улучшение/задача) и приоритет.
  * *Ответ:* Система создает задачу с статусом "Открыта", назначает уникальный идентификатор и отображает страницу задачи.
- **Сценарий 2:** Изменение статуса задачи
  * *Стимул:* Разработчик изменяет статус задачи с "В работе" на "Готово к тестированию".
  * *Ответ:* Система обновляет статус задачи, сохраняет историю изменений и уведомляет заинтересованных участников.

#### Functional Requirements

- **ISSUE-1**: Участники проекта должны иметь возможность создавать новые задачи.
- **ISSUE-2**: Система должна поддерживать различные типы задач (ошибка, улучшение, задача, функция).
- **ISSUE-3**: Система должна поддерживать workflow изменения статусов задач.
- **ISSUE-4**: Система должна вести историю изменений для каждой задачи.
- **ISSUE-5**: Система должна автоматически назначать уникальные идентификаторы задачам в рамках проекта.
- **ISSUE-6**: Пользователи должны иметь возможность назначать задачи на конкретных участников.

### Комментирование задач

#### Description and Priority

Позволяет участникам проекта обсуждать задачи через систему комментариев. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий:** Добавление комментария к задаче
  * *Стимул:* Участник проекта вводит текст комментария и нажимает "Добавить комментарий".
  * *Ответ:* Система сохраняет комментарий, привязывает его к задаче, отображает его в истории задачи и уведомляет других участников.

#### Functional Requirements

- **COMMENT-1**: Участники проекта должны иметь возможность добавлять комментарии к задачам.
- **COMMENT-2**: Система должна сохранять дату и автора для каждого комментария.

### Поиск и фильтрация задач

#### Description and Priority

Позволяет пользователям находить задачи по различным критериям. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий:** Поиск задач по критериям
  * *Стимул:* Пользователь вводит ключевые слова в поисковую строку и применяет фильтры по статусу, приоритету и назначенному лицу.
  * *Ответ:* Система отображает список задач, соответствующих критериям поиска и фильтрации.

#### Functional Requirements

- **SEARCH-1**: Система должна предоставлять возможность поиска задач по тексту.
- **SEARCH-2**: Система должна предоставлять фильтры по статусу, приоритету, типу задачи и назначенному лицу.
- **SEARCH-3**: Система должна сохранять часто используемые фильтры для пользователя.

### Система тегов и меток

#### Description and Priority

Позволяет категоризировать задачи с помощью тегов и меток для улучшения организации и поиска. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Добавление тега к задаче
  * *Стимул:* Пользователь выбирает задачу, вводит название тега в поле "Теги" и нажимает "Добавить".
  * *Ответ:* Система проверяет существование тега, привязывает его к задаче и обновляет отображение тегов.
- **Сценарий 2:** Создание нового тега проекта
  * *Стимул:* Администратор проекта переходит в настройки тегов, вводит название и цвет нового тега.
  * *Ответ:* Система создает новый тег, добавляет его в доступные для проекта и обновляет интерфейс.

#### Functional Requirements

- **TAG-1**: Система должна позволять добавлять теги к задачам.
- **TAG-2**: Система должна предоставлять интерфейс для управления тегами проекта.
- **TAG-3**: Теги должны иметь название и цветовое обозначение.
- **TAG-4**: Система должна позволять фильтровать задачи по тегам.
- **TAG-5**: Администраторы проекта должны иметь возможность создавать, редактировать и удалять теги.
