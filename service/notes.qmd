# Сервис онлайн заметок

## Overall Description

Реализовать веб-сервис для создания и управления персональными заметками .

## Product Functions

- Регистрация и аутентификация пользователей
- Управление профилем пользователя
- Создание, редактирование и удаление текстовых заметок
- Организация заметок с помощью категорий и тегов
- Поиск и фильтрация заметок
- Экспорт заметок в различные форматы
- Управление доступом к заметкам (приватные/публичные)

## System Features

### Управление заметками

#### Description and Priority

Функция позволяет пользователям создавать, просматривать, редактировать и удалять текстовые заметки. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Создание новой заметки
  * *Стимул:* Пользователь заполняет форму создания заметки с заголовком и содержимым.
  * *Ответ:* Система сохраняет заметку в БД с меткой времени и отображает ее в списке.
- **Сценарий 2:** Редактирование существующей заметки
  * *Стимул:* Пользователь выбирает заметку из списка, вносит изменения и сохраняет.
  * *Ответ:* Система обновляет запись в БД, сохраняя историю изменений.
- **Сценарий 3:** Удаление заметки
  * *Стимул:* Пользователь выбирает опцию удаления для конкретной заметки.
  * *Ответ:* Система перемещает заметку в корзину или полностью удаляет из БД.

#### Functional Requirements

- **NOTE-1**: Система должна предоставлять функции для управления заметками
- **NOTE-2**: Каждая заметка должна содержать заголовок, содержимое, дату создания и последнего изменения
- **NOTE-3**: Система должна автоматически сохранять черновики при редактировании
- **NOTE-4**: Система должна поддерживать форматирование текста Markdown
- **NOTE-5**: Система должна обеспечивать целостность данных при одновременном редактировании

### Организация заметок

#### Description and Priority

Функция позволяет пользователям категоризировать и тегировать заметки для улучшения навигации. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Создание категории
  * *Стимул:* Пользователь создает новую категорию через интерфейс.
  * *Ответ:* Система сохраняет категорию и связывает ее с пользователем.
- **Сценарий 2:** Назначение тегов заметке
  * *Стимул:* Пользователь добавляет теги к существующей заметке.
  * *Ответ:* Система обновляет связи между заметкой и тегами в БД.
- **Сценарий 3:** Фильтрация по категориям
  * *Стимул:* Пользователь выбирает категорию для просмотра.
  * *Ответ:* Система отображает только заметки из выбранной категории.

#### Functional Requirements

- **ORG-1**: Система должна позволять создавать, редактировать и удалять категории
- **ORG-2**: Система должна поддерживать неограниченное количество тегов на заметку
- **ORG-3**: Система должна обеспечивать уникальность тегов в пределах пользователя
- **ORG-4**: Система должна предоставлять функции для получения заметок по категории/тегу

### Поиск и фильтрация

#### Description and Priority

Функция позволяет пользователям находить заметки по различным критериям. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Текстовый поиск
  * *Стимул:* Пользователь вводит поисковый запрос в строку поиска.
  * *Ответ:* Система выполняет полнотекстовый поиск и возвращает релевантные заметки.
- **Сценарий 2:** Фильтрация по дате
  * *Стимул:* Пользователь выбирает диапазон дат для фильтрации.
  * *Ответ:* Система отображает заметки, созданные в указанный период.
- **Сценарий 3:** Комбинированная фильтрация
  * *Стимул:* Пользователь применяет несколько фильтров одновременно.
  * *Ответ:* Система комбинирует условия фильтрации и возвращает соответствующий результат.

#### Functional Requirements

- **SRCH-1**: Система должна реализовывать полнотекстовый поиск по заголовкам и содержимому заметок
- **SRCH-2**: Система должна поддерживать фильтрацию по категориям, тегам и датам
- **SRCH-3**: Система должна кэшировать популярные поисковые запросы
- **SRCH-4**: Система должна предоставлять автодополнение для поисковых запросов

### Управление доступом

#### Description and Priority

Функция позволяет управлять видимостью заметок для других пользователей. Приоритет: Низкий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Публикация заметки
  * *Стимул:* Пользователь изменяет настройки доступа заметки на "публичная".
  * *Ответ:* Система делает заметку доступной для просмотра другими пользователями.
- **Сценарий 2:** Предоставление доступа по ссылке
  * *Стимул:* Пользователь генерирует публичную ссылку для приватной заметки.
  * *Ответ:* Система создает уникальный токен доступа и формирует URL для распространения.

#### Functional Requirements

- **ACL-1**: Система должна поддерживать уровни доступа: приватный, публичный, по ссылке
- **ACL-2**: Система должна генерировать уникальные токены для общего доступа
- **ACL-3**: Система должна проверять права доступа при каждом запросе к заметке
- **ACL-4**: Система должна предоставлять API для управления настройками доступа

### Экспорт данных

#### Description and Priority

Функция позволяет экспортировать заметки в различные форматы. Приоритет: Низкий.

#### Stimulus/Response Sequences
- **Сценарий 1:** Экспорт в Markdown
  * *Стимул:* Пользователь выбирает заметки и формат Markdown для экспорта.
  * *Ответ:* Система генерирует Markdown-документ и предоставляет ссылку для скачивания.
- **Сценарий 2:** Массовый экспорт
  * *Стимул:* Пользователь выбирает несколько заметок для экспорта.
  * *Ответ:* Система создает архив с выбранными заметками в указанном формате.

#### Functional Requirements

- **EXP-1**: Система должна поддерживать экспорт в форматы: Markdown, HTML, TXT
- **EXP-2**: Система должна позволять выбирать отдельные заметки или категории для экспорта
- **EXP-3**: Система должна формировать корректно отформатированные документы
- **EXP-4**: Система должна ограничивать размер экспортируемых данных

### Резервное копирование и синхронизация

#### Description and Priority

Функция позволяет создавать резервные копии данных и синхронизировать между устройствами. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Создание резервной копии
  * *Стимул:* Пользователь инициирует создание резервной копии через интерфейс.
  * *Ответ:* Система создает полную копию данных пользователя и сохраняет ее в облачном хранилище.
- **Сценарий 2:** Восстановление из резервной копии
  * *Стимул:* Пользователь выбирает резервную копию для восстановления.
  * *Ответ:* Система восстанавливает все заметки и настройки из выбранной копии.

#### Functional Requirements

- **BACKUP-1**: Система должна автоматически создавать резервные копии по расписанию
- **BACKUP-2**: Система должна поддерживать инкрементное резервное копирование
- **BACKUP-3**: Система должна предоставлять интерфейс для управления резервными копиями