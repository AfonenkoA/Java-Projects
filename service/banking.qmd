# Платформа интернет банкинга

## Overall Description

Система предоставляет клиентам безопасный доступ к их банковским счетам через веб-интерфейс, позволяя выполнять основные финансовые операции, управлять картами и просматривать историю транзакций.

## Product Functions

-   Регистрация и аутентификация пользователей с усиленной безопасностью.
-   Управление персональным профилем клиента.
-   Просмотр баланса и списка банковских счетов.
-   Выполнение денежных переводов между счетами (внутренних и внешних).
-   Просмотр истории транзакций по счетам.
-   Управление банковскими картами (виртуальными и физическими).
-   Подача заявок на получение кредитов.
-   Оплата услуг (коммунальные услуги, мобильная связь и т.д.).
-   Администрирование системы (управление клиентами, счетами, транзакциями).

## System Features

### Управление банковскими счетами и Dashboard

#### Description and Priority

Позволяет аутентифицированному пользователю просматривать сводку по всем своим счетам, их текущие балансы и быстрый доступ к основным операциям. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий:** Просмотр главной страницы   
-   *Стимул:* Пользователь входит в систему и автоматически перенаправляется на Dashboard.
-   *Ответ:* Система получает из БД список всех счетов пользователя, их балансы и последние 5 транзакций, после чего отображает эту информацию в виде сводной панели.

#### Functional Requirements

-   **ACC-1**: Система должна отображать на Dashboard список всех счетов пользователя с номерами счетов, названиями и текущими балансами.
-   **ACC-2**: Система должна отображать на Dashboard список последних транзакций по всем счетам.
-   **ACC-3**: Система должна предоставлять на Dashboard быстрые ссылки для перевода денег и оплаты услуг.

### Выполнение денежных переводов

#### Description and Priority

Позволяет пользователю переводить денежные средства между своими счетами, а также на счета других клиентов данного банка. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1:** Успешный перевод между своими счетами
    *   *Стимул:* Пользователь выбирает счет-отправитель, счет-получатель (из списка своих счетов), сумму и нажимает "Перевести".
    *   *Ответ:* Система проверяет достаточность средств на счете-отправителе. При успехе создает две транзакции: списание и зачисление. Обновляет балансы счетов и отображает сообщение об успехе.
-   **Сценарий 2:** Успешный перевод другому клиенту
    *   *Стимул:* Пользователь выбирает счет-отправитель, вводит номер счета-получателя, сумму и назначение платежа.
    *   *Ответ:* Система проверяет существование счета-получателя и достаточность средств. При успехе выполняет списание и зачисление, фиксируя транзакцию в истории обоих пользователей.

#### Functional Requirements

-   **TRANS-1**: Система должна предоставлять форму для выбора счетов и ввода суммы перевода.
-   **TRANS-2**: Система должна проверять, что счет-отправитель принадлежит текущему пользователю.
-   **TRANS-3**: Система должна проверять достаточность средств на счете-отправителе перед выполнением перевода.
-   **TRANS-4**: Система должна гарантировать атомарность операции перевода (использовать транзакции на уровне БД).
-   **TRANS-5**: Система должна записывать запись о транзакции в историю для обоих участников перевода.

### Просмотр истории транзакций

#### Description and Priority

Позволяет пользователю просматривать детальную историю всех приходных и расходных операций по выбранному счету с возможностью фильтрации и пагинации. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Фильтрация истории по дате
-   *Стимул:* Пользователь заходит на страницу истории счета, выбирает дату "с" и "по", нажимает "Применить фильтр".
-   *Ответ:* Система выполняет запрос к БД, возвращая список транзакций за указанный период, и отображает их в виде таблицы.

#### Functional Requirements

-   **HIST-1**: Система должна отображать список всех транзакций для выбранного счета пользователя.
-   **HIST-2**: Система должна предоставлять возможность фильтрации транзакций по дате, типу (приход/расход) и сумме.
-   **HIST-3**: Система должна реализовывать пагинацию для списка транзакций.
-   **HIST-4**: Каждая запись в истории должна содержать дату, сумму, контрагента и назначение платежа.

### Управление банковскими картами

#### Description and Priority

Позволяет пользователю просматривать свои привязанные карты, блокировать/разблокировать потерянные или украденные карты, а также заказывать выпуск новых виртуальных карт. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Блокировка карты
-   *Стимул:* Пользователь переходит в раздел "Мои карты", выбирает карту из списка и нажимает кнопку "Заблокировать".
-   *Ответ:* Система запрашивает подтверждение действия. После подтверждения система обновляет статус карты в БД на "заблокирована". Все последующие операции по карте будут отклоняться.

#### Functional Requirements

-   **CARD-1**: Система должна отображать список всех карт пользователя с их маскированными номерами, типом, статусом (активна/заблокирована) и привязанным счетом.
-   **CARD-2**: Пользователь должен иметь возможность заблокировать любую свою активную карту.
-   **CARD-3**: Пользователь должен иметь возможность подать заявку на выпуск новой виртуальной карты, которая будет автоматически привязана к выбранному счету.

### Кредитный модуль

#### Description and Priority

Позволяет пользователю рассчитать параметры потенциального кредита, подать заявку на его получение и отслеживать статус существующих кредитов. Приоритет: Низкий.

#### Stimulus/Response Sequences

**Сценарий:** Подача заявки на кредит
-   *Стимул:* Пользователь заполняет форму: выбирает тип кредита, указывает желаемую сумму и срок, нажимает "Рассчитать". Система показывает график платежей. Пользователь нажимает "Подать заявку".
-   *Ответ:* Система создает новую запись "Кредитная заявка" со статусом "На рассмотрении" и уведомляет пользователя о том, что заявка принята в работу.

#### Functional Requirements

-   **LOAN-1**: Система должна предоставлять кредитный калькулятор для предварительного расчета ежемесячного платежа.
-   **LOAN-2**: Пользователь должен иметь возможность подать заявку на кредит, указав необходимые параметры.
-   **LOAN-3**: Система должна сохранять кредитную заявку со статусом "На рассмотрении".
-   **LOAN-4**: Пользователь должен видеть список своих кредитов и их текущий статус (погашен, в процессе, просрочен).

### Административная панель

#### Description and Priority

Предоставляет администратору системы полный контроль над пользователями, счетами, транзакциями и кредитными заявками. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий:** Одобрение кредитной заявки
-   *Стимул:* Администратор входит в панель управления, переходит в раздел "Кредитные заявки", выбирает заявку со статусом "На рассмотрении" и нажимает "Одобрить".
-   *Ответ:* Система создает новый кредитный счет для пользователя, на который зачисляется сумма кредита, меняет статус заявки на "Одобрена" и уведомляет пользователя.

#### Functional Requirements

-   **ADMIN-1**: Система должна предоставлять интерфейс для просмотра, поиска и фильтрации всех пользователей.
-   **ADMIN-2**: Администратор должен иметь возможность блокировать/разблокировать пользователей и их счета.
-   **ADMIN-3**: Администратор должен иметь возможность просматривать все транзакции в системе.
-   **ADMIN-4**: Администратор должен иметь возможность одобрять или отклонять кредитные заявки.
