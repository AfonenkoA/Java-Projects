# Web сервис календарь и планирование

## Общее описание

## 2.2 Функции продукта

-   Регистрация и аутентификация пользователей.
-   Управление личными событиями (создание, просмотр, редактирование, удаление).
-   Управление задачами (Todo list).
-   Создание повторяющихся событий.
-   Установка напоминаний для событий.
-   Организация событий по категориям (с использованием тегов или цветовых меток).
-   Предоставление общего доступа к событиям и календарям другим пользователям.
-   Просмотр календаря в различных режимах (день, неделя, месяц).
-   Поиск и фильтрация событий и задач.

### **3. Системные требования**

### **3.1 Функциональность системы**

### Управление событиями календаря

#### Description and Priority

Позволяет пользователю создавать, просматривать, изменять и удалять события в своем календаре. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1:** Создание события
    *   *Стимул:* Пользователь нажимает "Создать событие", вводит название, описание, дату и время начала/окончания, выбирает категорию и сохраняет.
    *   *Ответ:* Система валидирует данные (например, дата окончания не раньше даты начала) и сохраняет событие в БД. Новое событие отображается в календаре.
-   **Сценарий 2:** Просмотр календаря (месяц)
    *   *Стимул:* Пользователь открывает главную страницу или выбирает вид "Месяц".
    *   *Ответ:* Система загружает из БД все события текущего пользователя за выбранный месяц и отображает их в виде сетки календаря.
-   **Сценарий 3:** Редактирование события
    *   *Стимул:* Пользователь кликает на существующее событие в календаре, нажимает "Изменить", вносит правки и сохраняет.
    *   *Ответ:* Система обновляет запись в БД и отображает изменения в интерфейсе.

#### Functional Requirements

-   **EVT-1**: Система должна гарантировать, что пользователь может работать только со своими событиями.
-   **EVT-2**: Событие должно иметь следующие обязательные атрибуты: заголовок, дата/время начала, дата/время окончания.
-   **EVT-3**: Событие может иметь следующие опциональные атрибуты: описание, место проведения, цветовая метка.
-   **EVT-4**: Система должна валидировать временные интервалы события (время окончания >= времени начала).

### Управление задачами

#### Description and Priority

Позволяет пользователю управлять списком дел, которые не привязаны к конкретному времени, но могут иметь срок выполнения. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1:** Добавление задачи
    *   *Стимул:* Пользователь вводит текст задачи в поле ввода и нажимает "Добавить".
    *   *Ответ:* Система создает новую задачу со статусом "Не выполнено" и добавляет ее в список.
-   **Сценарий 2:** Отметка задачи как выполненной
    *   *Стимул:* Пользователь устанавливает флажок рядом с задачей.
    *   *Ответ:* Система изменяет статус задачи на "Выполнено" и визуально выделяет ее (например, перечеркивает текст).
-   **Сценарий 3:** Удаление выполненных задач
    *   *Стимул:* Пользователь нажимает кнопку "Очистить выполненные".
    *   *Ответ:* Система удаляет все задачи со статусом "Выполнено" из БД и интерфейса.

#### Functional Requirements

*   **TODO-1**: Задача должна иметь следующие атрибуты: описание, статус (выполнено/не выполнено), дата создания.
*   **TODO-2**: Задача может иметь опциональный атрибут: срок выполнения (due date).
*   **TODO-3**: Пользователь должен иметь возможность фильтровать задачи по статусу (все, активные, выполненные).

### Повторяющиеся события

#### Description and Priority

Позволяет пользователю создавать события, которые повторяются по заданному правилу (ежедневно, еженедельно, ежемесячно). Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Создание еженедельного события
-   *Стимул:* При создании события пользователь выбирает тип повторения "Еженедельно", указывает день недели и конечную дату повтора.
-   *Ответ:* Система создает в БД шаблон повторяющегося события. При просмотре календаря система динамически генерирует и отображает все экземпляры этого события в указанном временном промежутке.

#### Functional Requirements

-   **REP-1**: Система должна поддерживать следующие типы повторений: ежедневно, еженедельно, ежемесячно, ежегодно.
-   **REP-2**: Система должна позволять задавать конец повторения (по дате, после N повторений, бесконечно).
-   **REP-3**: При редактировании одного экземпляра повторяющегося события система должна спросить пользователя, применить ли изменения только к этому экземпляру или ко всей серии.

### Система напоминаний

#### Description and Priority

Позволяет пользователю устанавливать напоминания для событий, которые будут отображаться в интерфейсе. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Создание напоминания
-   *Стимул:* При создании или редактировании события пользователь добавляет напоминание "За 15 минут до начала".
-   *Ответ:* Система сохраняет настройки напоминания. За 15 минут до начала события система добавляет уведомление в раздел "Предстоящие" или выделяет соответствующее событие.

#### Functional Requirements

-   **REM-1**: Напоминание должно быть привязано к событию.
-   **REM-2**: Система должна позволять выбирать время напоминания относительно времени начала события (например, за 5 мин, 15 мин, 1 час, 1 день).
-   **REM-3**: Система должна предоставлять функицю для получения списка предстоящих напоминаний для аутентифицированного пользователя.

### Общий доступ к событиям и календарям

#### Description and Priority

Позволяет пользователю предоставлять доступ на чтение или редактирование своих событий другим пользователям системы. Приоритет: Низкий.

#### Stimulus/Response Sequences

**Сценарий:** Предоставление доступа на чтение
-   *Стимул:* Пользователь в настройках события нажимает "Предоставить доступ", вводит email другого пользователя и выбирает право "Чтение".
-   *Ответ:* Система проверяет существование пользователя и создает запись о предоставлении доступа. Теперь событие отображается в календаре целевого пользователя в режиме "только для чтения".

#### Functional Requirements

-   **SHR-1**: Система должна позволять предоставлять доступ к отдельным событиям.
-   **SHR-2**: Система должна поддерживать два уровня доступа: "Чтение" и "Редактирование".
-   **SHR-3**: Пользователь должен иметь возможность видеть список всех календарей и событий, к которым ему предоставлен доступ.
