# Платформа управления заявлениями абитуриентов

## Overall Description

Реализовать веб-платформу для управления заявлениями абитуриентов, желающих поступить в университет. Платформа должна позволять абитуриентам подавать заявления, а сотрудникам приемной комиссии управлять этими заявлениями.

## Product Functions

- Регистрация и аутентификация пользователей (абитуриенты, сотрудники приемной комиссии, администраторы)
- Управление профилем пользователя
- Подача заявления абитуриентом
- Просмотр и редактирование заявления абитуриентом
- Просмотр списка заявлений сотрудником приемной комиссии
- Изменение статуса заявления сотрудником приемной комиссии
- Фильтрация и поиск заявлений
- Генерация отчетов по заявлениям
- Управление учебными программами (направлениями) администратором

## System Features

### Управление профилем пользователя

#### Description and Priority

Позволяет аутентифицированному пользователю просматривать и редактировать информацию в своем профиле. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Редактирование профиля абитуриентом
  * *Стимул:* Абитуриент переходит на страницу своего профиля, нажимает "Редактировать", изменяет данные (ФИО, контактная информация, фото) и сохраняет.
  * *Ответ:* Система обновляет информацию о пользователе в базе данных и отображает актуальные данные на странице профиля.
- **Сценарий 2:** Заполнение образовательной информации
  * *Стимул:* Абитуриент заполняет информацию о предыдущем образовании в своем профиле.
  * *Ответ:* Система сохраняет образовательную информацию и связывает ее с профилем пользователя.

#### Functional Requirements

- **PROF-1**: Пользователь должен иметь возможность просматривать свой профиль.
- **PROF-2**: Абитуриент должен иметь возможность редактировать личную информацию (ФИО, дата рождения, контактные данные, адрес).
- **PROF-3**: Абитуриент должен иметь возможность загружать и изменять свое фото.
- **PROF-4**: Абитуриент должен иметь возможность вводить информацию о предыдущем образовании (школа, диплом, оценки).
- **PROF-5**: Система должна валидировать введенные данные профиля на корректность.

### Подача заявления абитуриентом

#### Description and Priority

Позволяет абитуриенту создать новое заявление на поступление. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Успешная подача заявления
  * *Стимул:* Абитуриент заходит в раздел "Подача заявления", выбирает программу, вводит необходимые данные и нажимает "Подать".
  * *Ответ:* Система проверяет данные, сохраняет заявление в статусе "Новое" и показывает сообщение об успешной подаче.
- **Сценарий 2:** Попытка подачи второго заявления
  * *Стимул:* Абитуриент пытается подать второе заявление в течение одной приемной кампании.
  * *Ответ:* Система отображает сообщение о том, что можно подать только одно заявление и предлагает редактировать существующее.

#### Functional Requirements

- **APP-1**: Абитуриент должен иметь возможность создать новое заявление.
- **APP-2**: Абитуриент должен иметь возможность прикрепить необходимые документы (сканы паспорта, аттестата, фото).
- **APP-3**: Система должна проверять, что все обязательные поля заполнены.
- **APP-4**: Система должна присваивать заявлению статус "Новое" при создании.
- **APP-5**: Абитуриент может иметь только одно активное заявление в течение приемной кампании.

### Просмотр и редактирование заявления абитуриентом

#### Description and Priority

Позволяет абитуриенту просматривать и редактировать свое заявление до того, как оно будет рассмотрено. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Редактирование заявления
  * *Стимул:* Абитуриент заходит в раздел "Мое заявление", нажимает "Редактировать", вносит изменения и сохраняет.
  * *Ответ:* Система обновляет заявление в базе данных и показывает актуальную информацию.
- **Сценарий 2:** Отзыв заявления
  * *Стимул:* Абитуриент нажимает "Отозвать заявление" до начала рассмотрения.
  * *Ответ:* Система изменяет статус заявления на "Отозвано" и уведомляет приемную комиссию.

#### Functional Requirements

- **APP-6**: Абитуриент должен иметь возможность редактировать свое заявление, если оно находится в статусе "Новое" или "Требует доработки".
- **APP-7**: Абитуриент должен иметь возможность отозвать свое заявление до начала рассмотрения.
- **APP-8**: Система должна вести историю изменений заявления.

### Управление заявлениями сотрудником приемной комиссии

#### Description and Priority

Позволяет сотруднику приемной комиссии просматривать, фильтровать и изменять статусы заявлений. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Просмотр списка заявлений
  * *Стимул:* Сотрудник заходит в раздел "Все заявления".
  * *Ответ:* Система отображает таблицу с заявлениями, включая основные поля (ФИО, программа, статус, дата подачи).
- **Сценарий 2:** Изменение статуса заявления
  * *Стимул:* Сотрудник выбирает заявление и изменяет его статус на "В рассмотрении".
  * *Ответ:* Система обновляет статус заявления и сохраняет информацию о сотруднике, который внес изменение.

#### Functional Requirements

- **EMP-1**: Сотрудник должен иметь возможность просматривать список всех заявлений.
- **EMP-2**: Сотрудник должен иметь возможность фильтровать заявления по статусу, программе, дате подачи.
- **EMP-3**: Сотрудник должен иметь возможность изменять статус заявления.
- **EMP-4**: Сотрудник должен иметь возможность оставлять комментарии к заявлению.
- **EMP-5**: Система должна записывать, какой сотрудник внес изменения в заявление.

### Поиск и фильтрация заявлений

#### Description and Priority

Позволяет сотрудникам эффективно находить нужные заявления с помощью системы поиска и фильтров. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Поиск заявления по ФИО
  * *Стимул:* Сотрудник вводит ФИО абитуриента в поле поиска.
  * *Ответ:* Система отображает все заявления, где ФИО соответствует запросу.
- **Сценарий 2:** Фильтрация по программе и статусу
  * *Стимул:* Сотрудник выбирает конкретную программу и статус из выпадающих списков фильтров.
  * *Ответ:* Система отображает только заявления, соответствующие выбранным критериям.

#### Functional Requirements

- **SRCH-1**: Система должна предоставлять возможность поиска заявлений по ФИО абитуриента.
- **SRCH-2**: Система должна предоставлять возможность фильтрации заявлений по учебной программе.
- **SRCH-3**: Система должна предоставлять возможность фильтрации заявлений по статусу.
- **SRCH-4**: Система должна предоставлять возможность фильтрации заявлений по дате подачи.

### Управление учебными программами

#### Description and Priority

Позволяет администраторам управлять учебными программами (направлениями), на которые подаются заявления. Приоритет: Средний.

#### Stimulus/Response Sequences

- **Сценарий 1:** Добавление новой программы
  * *Стимул:* Администратор заходит в раздел "Учебные программы", нажимает "Добавить программу", заполняет форму и сохраняет.
  * *Ответ:* Система создает новую программу и добавляет ее в список доступных для выбора при подаче заявления.
- **Сценарий 2:** Редактирование существующей программы
  * *Стимул:* Администратор выбирает программу из списка, изменяет количество доступных мест и сохраняет.
  * *Ответ:* Система обновляет информацию о программе в базе данных.

#### Functional Requirements

- **PROG-1**: Администратор должен иметь возможность создавать новые учебные программы.
- **PROG-2**: Администратор должен иметь возможность редактировать существующие учебные программы.
- **PROG-3**: Администратор должен иметь возможность устанавливать лимит мест для каждой программы.
- **PROG-4**: Администратор должен иметь возможность активировать и деактивировать программы.

### Генерация отчетов

#### Description and Priority

Позволяет сотрудникам и администраторам генерировать различные отчеты по заявлениям. Приоритет: Низкий.

#### Stimulus/Response Sequences

- **Сценарий 1:** Генерация отчета по количеству заявлений
  * *Стимул:* Сотрудник выбирает тип отчета "Количество заявлений по программам" и нажимает "Сгенерировать".
  * *Ответ:* Система формирует отчет в виде таблицы и графика.
- **Сценарий 2:** Экспорт отчета
  * *Стимул:* Сотрудник нажимает "Экспорт в CSV" на странице с отчетом.
  * *Ответ:* Система генерирует CSV файл с отчетом и предлагает его скачать.

#### Functional Requirements

- **REP-1**: Система должна предоставлять возможность генерировать отчеты по количеству заявлений.
- **REP-2**: Система должна предоставлять возможность генерировать отчеты по статусам заявлений.
- **REP-3**: Система должна предоставлять возможность экспортировать отчеты в форматы CSV.
- **REP-4**: Система должна предоставлять возможность фильтровать данные в отчетах по периоду времени.
