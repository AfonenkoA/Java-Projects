# Платформа технической поддержки

## Общее описание

Проект представляет собой веб-приложение, которое служит централизованной системой для регистрации, обработки и отслеживания запросов в службу технической поддержки. Ключевые возможности включают управление учетными записями пользователей и инженеров, полный жизненный цикл заявки, систему категоризации, поиск и фильтрацию, а также базовую аналитику для администраторов.

## Особенности системы

### Управление жизненным циклом заявки

#### Description and Priority

Это ядро системы. Функция позволяет пользователям создавать заявки, а инженерам — назначать, обновлять статус, приоритет и добавлять комментарии. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1:** Создание новой заявки
    *   *Стимул:* Пользователь нажимает "Создать заявку", заполняет тему, описание, выбирает категорию и сохраняет.
    *   *Ответ:* Система создает заявку со статусом "Открыта", присваивает уникальный номер и отображает ее в списке заявок пользователя.
-   **Сценарий 2:** Назначение заявки инженеру
    *   *Стимул:* Администратор или старший инженер выбирает заявку со статусом "Открыта" и назначает ее конкретному инженеру.
    *   *Ответ:* Система обновляет заявку, устанавливает статус "В работе" и назначает выбранного инженера. Инженер получает уведомление.
-   **Сценарий 3:** Добавление комментария к заявке
    *   *Стимул:* Инженер открывает заявку, вводит комментарий о прогрессе и сохраняет его.
    *   *Ответ:* Система добавляет комментарий в историю заявки, сохраняя автора и временную метку. Пользователь-создатель заявки получает уведомление.

#### Functional Requirements

-   **TICKET-1**: Пользователь должен иметь возможность создавать новую заявку с темой, описанием и категорией.
-   **TICKET-2**: Система должна автоматически присваивать заявке уникальный номер, дату создания и статус "Открыта".
-   **TICKET-3**: Инженер или администратор должен иметь возможность изменять статус заявки (e.g., "Открыта", "В работе", "Ожидает ответа", "Закрыта").
-   **TICKET-4**: Инженер или администратор должен иметь возможность изменять приоритет заявки (e.g., "Низкий", "Средний", "Высокий", "Критический").
-   **TICKET-5**: Любой аутентифицированный пользователь, связанный с заявкой (создатель, назначенный инженер), должен иметь возможность добавлять комментарии.
-   **TICKET-6**: Система должна вести полную историю изменений заявки (смена статуса, приоритета, назначение, комментарии).

### Управление категориями и темами проблем

#### Description and Priority

Функция позволяет администраторам создавать и управлять структурой категорий и подкатегорий для классификации заявок (например, "Оборудование", "ПО", "Сеть"). Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Добавление новой категории
-   *Стимул:* Администратор переходит в раздел "Управление категориями", нажимает "Добавить", вводит название и описание новой категории.
-   *Ответ:* Система сохраняет новую категорию в БД, и она становится доступной для выбора при создании новой заявки.

#### Functional Requirements

-   **CAT-1**: Администратор должен иметь возможность создавать, редактировать и удалять категории заявок.
-   **CAT-2**: Категории должны быть организованы в иерархическую структуру (родительская категория -> дочерние подкатегории).
-   **CAT-3**: При создании заявки пользователь должен иметь возможность выбрать категорию из предопределенного списка.

### Поиск и фильтрация заявок

#### Description and Priority

Функция позволяет пользователям и инженерам находить заявки по различным критериям: номер, тема, статус, приоритет, категория и т.д. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий:** Фильтрация заявок по статусу и приоритету
-   *Стимул:* Инженер на своей dashboard выбирает в фильтрах статус "В работе" и приоритет "Высокий".
-   *Ответ:* Система динамически обновляет список заявок, отображая только те, которые соответствуют выбранным критериям.

#### Functional Requirements

-   **SRCH-1**: Система должна предоставлять интерфейс для поиска заявок по номеру или ключевым словам в теме/описании.
-   **SRCH-2**: Система должна предоставлять возможность фильтровать заявки по статусу, приоритету, категории, дате создания и назначенному инженеру.

### Dashboard и отчетность

#### Description and Priority

Функция предоставляет сводную информацию на персональных dashboard для пользователей, инженеров и администраторов. Включает метрики и базовые отчеты. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Просмотр dashboard администратором
-   *Стимул:* Администратор входит в систему.
-   *Ответ:* Система отображает dashboard с виджетами: "Общее количество открытых заявок", "Распределение заявок по инженерам", "Количество заявок по категориям".

#### Functional Requirements

-   **DASH-1**: Пользователь должен видеть на dashboard список своих заявок с основными атрибутами.
-   **DASH-2**: Инженер должен видеть на dashboard список заявок, назначенных на него, а также метрики своей работы (например, количество закрытых заявок за неделю).
-   **DASH-3**: Администратор должен видеть на dashboard сводную аналитику по всей системе (общее количество заявок, среднее время решения, наиболее загруженные категории).