# Сервис бронирования отелей

## **2. Общее описание**

Сервис предоставляет функционал для поиска отелей, управления бронированиями для клиентов и управления отелями для поставщиков.

## **3. Функции продукта (Product Functions)**

-   Регистрация и аутентификация пользователей с разделением ролей (Клиент, Поставщик, Администратор).
-   Управление профилем пользователя.
-   Поиск и фильтрация отелей и номеров по различным критериям (даты, город, количество гостей, цена).
-   Просмотр подробной информации об отеле и номере.
-   Процесс бронирования номера.
-   Управление бронированиями (просмотр, отмена) для клиентов.
-   Управление каталогом отелей и номеров для поставщиков.
-   Просмотр и управление бронированиями для поставщиков.
-   Административная панель для управления пользователями и общим контентом.

### **4. Системные функции (System Features)**

### **4.2 Поиск и просмотр отелей и номеров**

#### **4.2.1 Description and Priority**

Функция позволяет любому пользователю (включая гостей) искать отели по заданным критериям и просматривать подробную информацию о них и доступных номерах. Приоритет: Высокий.

#### **4.2.2 Stimulus/Response Sequences**

-   **Сценарий 1:** Поиск отелей в городе.
    *   *Стимул:* Пользователь на главной странице вводит название города, даты заезда/выезда, количество гостей и нажимает "Найти".
    *   *Ответ:* Система отображает список отелей в указанном городе, у которых есть свободные номера на заданные даты, с указанием минимальной цены.
-   **Сценарий 2:** Применение фильтров.
    *   *Стимул:* Пользователь на странице результатов поиска устанавливает фильтры (диапазон цены, тип номера, рейтинг отеля).
    *   *Ответ:* Система динамически обновляет список отелей в соответствии с выбранными фильтрами.
-   **Сценарий 3:** Просмотр страницы отеля.
    *   *Стимул:* Пользователь нажимает на карточку отеля в списке результатов.
    *   *Ответ:* Система отображает детальную страницу отеля с описанием, фотографиями, списком доступных номеров на выбранные даты и отзывами.

#### **4.2.3 Functional Requirements**

*   **SRCH-1**: Система должна предоставлять интерфейс для поиска отелей по городу, датам заезда/выезда и количеству гостей.
*   **SRCH-2**: Система должна отображать список отелей, соответствующих критериям поиска.
*   **SRCH-3**: Система должна предоставлять возможность фильтрации результатов поиска по цене, типу номера, рейтингу и удобствам (Wi-Fi, завтрак и т.д.).
*   **SRCH-4**: Система должна отображать детальную страницу для каждого отеля с полной информацией о нем и списком номеров.

### **4.3 Процесс бронирования номера**

#### **4.3.1 Description and Priority**

Функция позволяет аутентифицированному Клиенту забронировать выбранный номер на указанные даты. Приоритет: Высокий.

#### **4.3.2 Stimulus/Response Sequences**

-   **Сценарий 1:** Начало бронирования.
    *   *Стимул:* Клиент на странице номера нажимает "Забронировать".
    *   *Ответ:* Система перенаправляет на страницу подтверждения бронирования, где отображаются сводка по заказу (номер, даты, итоговая цена, правила отмены).
-   **Сценарий 2:** Подтверждение бронирования.
    *   *Стимул:* Клиент нажимает "Подтвердить бронирование".
    *   *Ответ:* Система проверяет, что номер еще доступен на указанные даты, создает запись `Booking` со статусом `CONFIRMED`, отправляет подтверждение на email клиента и перенаправляет в личный кабинет.
-   **Сценарий 3:** Попытка бронирования уже занятого номера.
    *   *Стимул:* Клиент пытается подтвердить бронирование номера, который только что был забронирован другим пользователем.
    *   *Ответ:* Система отображает сообщение об ошибке "Номер больше не доступен на выбранные даты" и предлагает вернуться к поиску.

#### **4.3.3 Functional Requirements**

*   **BOOK-1**: Только аутентифицированные пользователи с ролью `CUSTOMER` могут создавать бронирования.
*   **BOOK-2**: Система должна блокировать возможность бронирования номера, если на запрашиваемые даты он уже занят.
*   **BOOK-3**: При создании бронирования система должна рассчитывать итоговую стоимость исходя из цены за ночь и количества ночей.
*   **BOOK-4**: Система должна отправлять email-подтверждение на адрес клиента после успешного бронирования.

### **4.4 Управление бронированиями (для Клиента)**

#### **4.4.1 Description and Priority**

Функция позволяет Клиенту просматривать историю своих бронирований, их текущий статус и отменять брони, где это разрешено правилами отеля. Приоритет: Средний.

#### **4.4.2 Stimulus/Response Sequences**

-   **Сценарий 1:** Просмотр списка бронирований.
    *   *Стимул:* Клиент переходит в раздел "Мои бронирования".
    *   *Ответ:* Система отображает список всех бронирований пользователя, отсортированный по дате создания (новые сверху).
-   **Сценарий 2:** Отмена бронирования.
    *   *Стимул:* Клиент нажимает "Отменить" напротив активного бронирования.
    *   *Ответ:* Система проверяет политику отмены отеля, изменяет статус брони на `CANCELLED`, освобождает даты номера и отправляет уведомление Поставщику.

#### **4.4.3 Functional Requirements**

*   **MBOOK-1**: Система должна предоставлять Клиенту интерфейс для просмотра всех его бронирований.
*   **MBOOK-2**: Клиент должен иметь возможность отменять бронирования со статусом `CONFIRMED`.
*   **MBOOK-3**: При отмене бронирования система должна обновлять статус и освобождать номер в календаре доступности.

### **4.5 Управление отелями и номерами (для Поставщика)**

#### **4.5.1 Description and Priority**

Функция позволяет Поставщику добавлять новые отели, редактировать информацию о существующих, управлять номерами (добавлять, убирать, менять цены) и контролировать их доступность. Приоритет: Высокий.

#### **4.5.2 Stimulus/Response Sequences**

-   **Сценарий 1:** Добавление нового отеля.
    *   *Стимул:* Поставщик в панели управления нажимает "Добавить отель", заполняет форму (название, адрес, описание, фотографии, удобства) и сохраняет.
    *   *Ответ:* Система создает новую запись `Hotel` в БД, связывает ее с текущим Поставщиком. Отель получает статус "на модерации" до проверки администратором.
-   **Сценарий 2:** Добавление номера в отель.
    *   *Стимул:* Поставщик выбирает отель и нажимает "Добавить номер", заполняет данные (тип номера, цена за ночь, количество комнат, описание).
    *   *Ответ:* Система создает новую запись `Room` и связывает ее с выбранным отелем.

#### **4.5.3 Functional Requirements**

*   **MHTL-1**: Система должна предоставлять интерфейс для Поставщика для управления его отелями (CRUD-операции).
*   **MHTL-2**: Система должна позволять Поставщику управлять номерами (комнатами) внутри каждого отеля (CRUD-операции).
*   **MHTL-3**: Система должна позволять Поставщику устанавливать и изменять цену за ночь для каждого номера.
*   **MHTL-4**: Система должна автоматически управлять календарем доступности номера на основе созданных бронирований.

### **4.6 Управление бронированиями (для Поставщика)**

#### **4.6.1 Description and Priority**

Функция позволяет Поставщику просматривать все бронирования в его отелях, фильтровать их по датам и статусам, а также подтверждать или отклонять запросы (если требуется ручное подтверждение). Приоритет: Средний.

#### **4.6.2 Stimulus/Response Sequences**

**Сценарий:** Просмотр бронирований для отеля.
-   *Стимул:* Поставщик в панели управления выбирает конкретный отель и переходит в раздел "Бронирования".
-   *Ответ:* Система отображает таблицу со всеми бронированиями для этого отеля, с возможностью фильтрации по дате заезда и статусу.

#### **4.6.3 Functional Requirements**

*   **VBOOK-1**: Система должна предоставлять Поставщику интерфейс для просмотра всех бронирований в его отелях.
*   **VBOOK-2**: Система должна отображать Поставщику актуальный статус каждого бронирования (например, `CONFIRMED`, `CANCELLED`, `COMPLETED`).

### **4.7 Административное управление**

#### **4.7.1 Description and Priority**

Функция позволяет Администратору управлять пользователями (блокировка), модерировать отели и номера перед публикацией, управлять общими справочниками (типы номеров, удобства). Приоритет: Низкий.

#### **4.7.2 Stimulus/Response Sequences**

**Сценарий:** Модерация нового отеля.
-   *Стимул:* Администратор в панели управления переходит в раздел "Ожидающие модерации отели", проверяет информацию и нажимает "Одобрить".
-   *Ответ:* Система изменяет статус отеля на `ACTIVE`, после чего он становится виден в результатах поиска.

#### **4.7.3 Functional Requirements**

*   **ADMIN-1**: Система должна предоставлять административную панель.
*   **ADMIN-2**: Администратор должен иметь возможность просматривать и изменять статус любых отелей (`PENDING`, `ACTIVE`, `REJECTED`).
*   **ADMIN-3**: Администратор должен иметь возможность блокировать/разблокировать пользователей.
