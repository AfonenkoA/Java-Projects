# Социальная сеть основанная на фотографиях

## Overall Description

Реализовать учебный проект социальной сети с функциональностью, аналогичной Instagram, используя Java с технологиями Jakarta EE и базу данных PostgreSQL.

## Product Functions

- Регистрация и аутентификация пользователей
- Управление профилем пользователя (аватар, био, личная информация)
- Публикация фотографий/изображений с описанием
- Система лайков и комментариев к публикациям
- Система подписок (follow/unfollow)
- Просмотр ленты публикаций от пользователей, на которых подписан
- Поиск пользователей и публикаций

## User Classes and Characteristics

- **Гость**: Может зарегистрировать новую учетную запись или войти в существующую. Может просматривать публичные профили.
- **Аутентифицированный пользователь**: Основной пользователь системы. Может управлять профилем, публиковать контент, взаимодействовать с другими пользователями, просматривать ленту.

## System Features

### Управление аккаунтом

#### Description and Priority
Функция позволяет пользователям регистрироваться и входить в систему. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Регистрация нового пользователя:**
  * *Пользователь:* Заполняет форму (email, логин, пароль) и нажимает "Зарегистрироваться"
  * *Система:* Сохраняет данные пользователя и перенаправляет на страницу входа

- **Вход в систему:**
  * *Пользователь:* Вводит логин и пароль, нажимает "Войти"
  * *Система:* Проверяет данные и открывает доступ к личному кабинету

- **Выход из системы:**
  * *Пользователь:* Нажимает "Выйти"
  * *Система:* Завершает сессию и перенаправляет на главную страницу

#### Functional Requirements

- **ACC-1:** Регистрация нового пользователя через веб-форму
- **ACC-2:** Проверка уникальности логина и email
- **ACC-3:** Вход в систему по логину/email и паролю
- **ACC-4:** Хранение паролей в зашифрованном виде
- **ACC-5:** Создание пользовательской сессии после входа
- **ACC-6:** Выход из системы с очисткой сессии

### Управление профилем пользователя

#### Description and Priority

Позволяет аутентифицированному пользователю управлять информацией в своем профиле. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий:** Редактирование профиля
  * *Стимул:* Пользователь переходит в настройки профиля, изменяет аватар, имя, био и сохраняет.
  * *Ответ:* Система обновляет информацию о пользователе в базе данных и отображает изменения.
- **Сценарий:** Просмотр чужого профиля
  * *Стимул:* Пользователь переходит по ссылке на профиль другого пользователя.
  * *Ответ:* Система отображает информацию о пользователе, его публикации и статистику.

#### Functional Requirements

- **PROF-1**: Пользователь должен иметь возможность загружать и изменять аватар профиля.
- **PROF-2**: Пользователь должен иметь возможность редактировать информацию профиля.
- **PROF-3**: Система должна отображать профиль любого пользователя.
- **PROF-4**: Система должна отображать статистику профиля (количество публикаций, подписчиков, подписок).

### Публикация контента

#### Description and Priority

Позволяет пользователям публиковать изображения и управлять своими публикациями. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий:** Создание публикации
  * *Стимул:* Пользователь загружает изображение, добавляет описание и нажимает "Опубликовать".
  * *Ответ:* Система сохраняет изображение, создает запись о публикации и отображает ее в профиле.
- **Сценарий:** Удаление публикации
  * *Стимул:* Пользователь удаляет свою публикацию.
  * *Ответ:* Система удаляет публикацию и все связанные с ней лайки и комментарии.

#### Functional Requirements

- **POST-1**: Пользователь должен иметь возможность загружать изображения (JPEG, PNG) с описанием.
- **POST-2**: Пользователь должен иметь возможность редактировать описание публикации.
- **POST-3**: Пользователь должен иметь возможность удалять свои публикации.

### Система взаимодействий

#### Description and Priority

Позволяет пользователям взаимодействовать с контентом через лайки и комментарии. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий:** Добавление лайка
  * *Стимул:* Пользователь нажимает "лайк" под публикацией.
  * *Ответ:* Система добавляет лайк и обновляет счетчик.
- **Сценарий:** Добавление комментария
  * *Стимул:* Пользователь добавляет комментарий к публикации.
  * *Ответ:* Система сохраняет комментарий и отображает его под публикацией.

#### Functional Requirements

- **INT-1**: Пользователь должен иметь возможность ставить/убирать лайк на публикациях.
- **INT-2**: Пользователь должен иметь возможность добавлять комментарии к публикациям.
- **INT-3**: Пользователь должен иметь возможность редактировать и удалять свои комментарии.
- **INT-4**: Система должна отображать количество лайков и комментариев для каждой публикации.

### Система подписок

#### Description and Priority

Позволяет пользователям подписываться на других пользователей и управлять подписками. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий:** Подписка на пользователя
  * *Стимул:* Пользователь нажимает "Подписаться" в профиле другого пользователя.
  * *Ответ:* Система создает запись о подписке и обновляет счетчики.
- **Сценарий:** Отписка от пользователя
  * *Стимул:* Пользователь нажимает "Отписаться".
  * *Ответ:* Система удаляет запись о подписке и обновляет счетчики.

#### Functional Requirements

- **SUB-1**: Пользователь должен иметь возможность подписываться на других пользователей.
- **SUB-2**: Пользователь должен иметь возможность отписываться от пользователей.
- **SUB-3**: Система должна отображать список подписчиков и подписок для каждого пользователя.

### Лента публикаций

#### Description and Priority

Отображает персональную ленту публикаций от пользователей, на которых подписан текущий пользователь. Приоритет: Высокий.

#### Stimulus/Response Sequences

- **Сценарий:** Просмотр ленты
  * *Стимул:* Пользователь заходит на главную страницу.
  * *Ответ:* Система отображает ленту с последними публикациями от подписок в хронологическом порядке.
- **Сценарий:** Бесконечная прокрутка
  * *Стимул:* Пользователь прокручивает ленту до конца.
  * *Ответ:* Система загружает следующую страницу с публикациями.

#### Functional Requirements

- **FEED-1**: Система должна отображать ленту публикаций от пользователей, на которых подписан текущий пользователь.
- **FEED-2**: Публикации в ленте должны быть отсортированы по времени публикации (новые сначала).