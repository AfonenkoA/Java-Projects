# Классическая социальная сеть

## Overall Description

Реализовать проект представляющий минимальную социальную сеть классического формата (например VK и Facebook).

## Product Functions

-   Регистрация и аутентификация пользователей
-   Управление профилем пользователя
-   Публикация текстовых постов
-   Возможность оставлять комментарии к постам
-   Возможность добавления друзей
-   Просмотр ленты постов от друзей в хронологичесокм порядке


## User Classes and Characteristics

-   **Гость**: Может зарегистрировать новую учетную запись или войти в существующую.
-   **Аутентифицированный пользователь**: Основной пользователь системы. Может управлять своим профилем, добавлять в друзья других пользователей, создавать посты, комментировать, общаться в личных сообщениях и просматривать свою ленту новостей. 

## System Features

Более подробное описание функций проекта

### Управление аккаунтом

#### Description and Priority

Функция позволяет пользователям регистрировать новую учетную запись и аутентифицироваться в системе. Приоритет: Высокий.

#### Stimulus/Response Sequences

-   **Сценарий 1:** Успешная регистрация
    *   *Стимул:* Гость нажимает "Зарегистрироваться", вводит email, логин, пароль и подтверждает пароль.
    *   *Ответ:* Система проверяет уникальность логина/email, хэширует пароль, сохраняет данные пользователя в БД и перенаправляет на страницу входа с сообщением об успехе.
-   **Сценарий 2:** Успешный вход
    *   *Стимул:* Пользователь вводит логин и пароль на форме входа.
    *   *Ответ:* Система проверяет учетные данные, создает сессию и перенаправляет пользователя на его персональную ленту новостей.
-   **Сценарий 3:** Неуспешный вход
    *   *Стимул:* Пользователь вводит неверные учетные данные.
    *   *Ответ:* Система отображает сообщение об ошибке, не создавая сессию.

#### Functional Requirements
-   **ACC-1**: Система должна предоставлять форму для регистрации нового пользователя.
-   **ACC-2**: Система должна проверять, что логин и email не заняты другими пользователями.
-   **ACC-4**: Система должна предоставлять форму для аутентификации существующего пользователя.
-   **ACC-5**: Система должна создавать и поддерживать пользовательскую сессию после успешной аутентификации.
-   **ACC-6**: Доступ к страницам аутентифицированных пользователей должен быть запрещен для гостей.

### Управление профилем пользователя

#### Description and Priority

Позволяет аутентифицированному пользователю просматривать и редактировать информацию в своем профиле. Приоритет: Высокий.

#### Stimulus/Response Sequences

**Сценарий:** Редактирование профиля

-   *Стимул:* Пользователь переходит на страницу своего профиля, нажимает "Редактировать", изменяет данные (например, "О себе") и сохраняет.
-   *Ответ:* Система обновляет информацию о пользователе в базе данных и отображает актуальные данные на странице профиля.

#### Functional Requirements

-   **PROF-1**: Пользователь должен иметь возможность просматривать свой профиль.
-   **PROF-2**: Пользователь должен иметь возможность редактировать базовую информацию в своем профиле (имя, фамилия, краткая биография).
-   **PROF-3**: Система должна отображать профиль любого пользователя.

### Управление друзьями

#### Description and Priority

Позволяет пользователям находить других пользователей, отправлять, принимать и отклонять запросы на добавление в друзья. Приоритет: Средний.

#### Stimulus/Response Sequences

-   **Сценарий 1**: Отправка запроса в друзья
    *   *Стимул:* Пользователь А на странице профиля Пользователя Б нажимает "Добавить в друзья".
    *   *Ответ:* Система создает запись "ожидающий запрос на дружбу" в БД и уведомляет Пользователя Б.
-   **Сценарий 2**: Подтверждение запроса на дружбу
    *   *Стимул:* Пользователь Б на своей странице "Запросы в друзья" подтверждает запрос от Пользователя А.
    *   *Ответ:* Система устанавливает двустороннюю связь "друзья" между А и Б и удаляет запрос.

#### Functional Requirements

-   **FRND-1**: Пользователь должен иметь возможность находить других пользователей по имени или логину.
-   **FRND-2**: Пользователь должен иметь возможность отправить запрос на дружбу другому пользователю (если запрос еще не отправлен).
-   **FRND-3**: Пользователь должен видеть список входящих и исходящих запросов на дружбу.
-   **FRND-4**: Пользователь должен иметь возможность принять или отклонить входящий запрос на дружбу.
-   **FRND-5**: Система должна предоставлять список текущих друзей пользователя.

### Создание и просмотр постов

#### Description and Priority

Позволяет пользователям создавать текстовые посты, которые видны их друзьям в ленте новостей. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Создание нового поста

-   *Стимул:* Пользователь вводит текст в поле "Что у вас нового?" на своей странице или в ленте и нажимает "Опубликовать".
-   *Ответ:* Система сохраняет пост в базе данных, связывает его с автором и немедленно добавляет в ленту новостей всех его друзей.

#### Functional Requirements

-   **POST-1:** Пользователь должен иметь возможность создать текстовый пост.
-   **POST-2:** Пост должен быть связан с его автором и временем публикации.
-   **POST-3:** Система должна отображать посты друзей пользователя в его ленте новостей в обратном хронологическом порядке (последние сверху).


### Комментари к постам

#### Description and Priority

Позволяет пользователям оставлять текстовые комментарии к постам своих друзей. Приоритет: Низкий.

#### Stimulus/Response Sequences

**Сценарий:** Добавление комментария
-   *Стимул:* Пользователь вводит текст в поле "Комментировать" под постом и нажимает "Отправить".
-   *Ответ:* Система сохраняет комментарий, связывает его с постом и автором, и немедленно отображает его под постом.

#### 3.5.3 Functional Requirements

-   **COMM-1:** Пользователь должен иметь возможность оставить комментарий к любому посту в своей ленте новостей.
-   **COMM-2:** Комментарий должен быть связан с постом, автором комментария и временем его создания.
-   **COMM-3:** Система должна отображать все комментарии к посту, обычно в хронологическом порядке.

### Поиск пользователей

#### Description and Priority

Позволяет пользователям находить других пользователей по имени, фамилии или логину. Приоритет: Средний.

#### Stimulus/Response Sequences

**Сценарий:** Поиск пользователя

-   *Стимул:* Пользователь вводит имя, фамилию или логин в строку поиска и нажимает "Найти".
-   *Ответ:* Система отображает список пользователей, соответствующих поисковому запросу, с возможностью перейти к их профилям.

#### Functional Requirements

-   **SRCH-1**: Система должна предоставлять интерфейс для поиска пользователей.
-   **SRCH-2**: Поиск должен осуществляться по имени, фамилии и логину пользователя.
-   **SRCH-3**: Результаты поиска должны отображаться в виде списка с основной информацией о пользователях.

